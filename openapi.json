{
    "openapi": "3.0.0",
    "info": {
        "title": "SimplePay API v2",
        "description": "This is a SimplePay API v2 documentation.",
        "termsOfService": "#",
        "contact": {
            "name": "Cone Development",
            "url": "https://conedevelopment.com",
            "email": "hello@conedevelopment.com"
        },
        "version": "2.0.0"
    },
    "servers": [
        {
            "url": "https://secure.simplepay.hu/payment/v2",
            "description": "The Production SimplePay API"
        },
        {
            "url": "https://sandbox.simplepay.hu/payment/v2",
            "description": "The Test SimplePay API"
        }
    ],
    "paths": {
        "/start": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Start a transaction",
                "description": "Start a transaction using the given parameters",
                "operationId": "start",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The transaction object you would like to start.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "orderRef": {
                                            "$ref": "#/components/schemas/OrderRef"
                                        },
                                        "currency": {
                                            "$ref": "#/components/schemas/Currency"
                                        },
                                        "transactionId": {
                                            "$ref": "#/components/schemas/TransactionId"
                                        },
                                        "timeout": {
                                            "type": "string",
                                            "description": "The ISO 8601 format of the timeout date.",
                                            "example": "2004-02-12T15:19:21+00:00"
                                        },
                                        "total": {
                                            "type": "number",
                                            "example": 25.0
                                        },
                                        "paymentUrl": {
                                            "type": "string",
                                            "example": "https://sandbox.simplepay.hu/pay/pay/pspHU/8f4oKRec5R1B696xlxbOcj1jRhhABA2pwSLQDPW60zoGSDWzDU",
                                            "description": "The payment interface URL."
                                        },
                                        "tokens": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Token"
                                            },
                                            "description": "The recurring payment tokens. Provided only for the initial recurring payment."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/finish": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Finish a two-step transaction",
                "description": "Finish an authorized two-step transaction.",
                "operationId": "finish",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The authorized transaction object you would like to finish.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthorizedTransaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "orderRef": {
                                            "$ref": "#/components/schemas/OrderRef"
                                        },
                                        "currency": {
                                            "$ref": "#/components/schemas/Currency"
                                        },
                                        "transactionId": {
                                            "$ref": "#/components/schemas/TransactionId"
                                        },
                                        "approveTotal": {
                                            "type": "number",
                                            "example": 25.0
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/refund": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Refund a transaction",
                "description": "Refund a transaction fully or partially.",
                "operationId": "refund",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The refund object.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Refund"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "orderRef": {
                                            "$ref": "#/components/schemas/OrderRef"
                                        },
                                        "currency": {
                                            "$ref": "#/components/schemas/Currency"
                                        },
                                        "transactionId": {
                                            "$ref": "#/components/schemas/TransactionId"
                                        },
                                        "refundTransactionId": {
                                            "$ref": "#/components/schemas/TransactionId"
                                        },
                                        "refundTotal": {
                                            "type": "number",
                                            "example": 25.0
                                        },
                                        "remainingTotal": {
                                            "type": "number",
                                            "example": 25.0
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/query": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Query a set transactions",
                "description": "Get the given transactions.",
                "operationId": "query",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The query parameters.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Query"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "transactions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {

                                                    "salt": {
                                                        "type": "string",
                                                        "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                                    },
                                                    "merchant": {
                                                        "type": "string",
                                                        "example": "PUBLICTESTHUF"
                                                    },
                                                    "orderRef": {
                                                        "$ref": "#/components/schemas/OrderRef"
                                                    },
                                                    "currecy": {
                                                        "$ref": "#/components/schemas/Currency"
                                                    },
                                                    "currecyEnum": {
                                                        "$ref": "#/components/schemas/Currency"
                                                    },
                                                    "customer": {
                                                        "type": "string",
                                                        "example": "Guillaume Tell"
                                                    },
                                                    "customerEmail": {
                                                        "type": "string",
                                                        "format": "email"
                                                    },
                                                    "language": {
                                                        "$ref": "#/components/schemas/Language"
                                                    },
                                                    "twoStep": {
                                                        "type": "boolean",
                                                        "default": false
                                                    },
                                                    "total": {
                                                        "type": "number",
                                                        "example": 25.0
                                                    },
                                                    "items": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {

                                                                "ref": {
                                                                    "type": "string",
                                                                    "example": "SKU123"
                                                                },
                                                                "title": {
                                                                    "type": "string",
                                                                    "example": "Sample Product"
                                                                },
                                                                "amount": {
                                                                    "type": "integer",
                                                                    "description": "The quantity."
                                                                },
                                                                "price": {
                                                                    "type": "number",
                                                                    "example": 25.0
                                                                },
                                                                "tax": {
                                                                    "type": "number",
                                                                    "minimum": 0
                                                                },
                                                                "grossUnitPrice": {
                                                                    "type": "number",
                                                                    "example": 25.0
                                                                },
                                                                "rowTotal": {
                                                                    "type": "number",
                                                                    "example": 25.0
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "discount": {
                                                        "type": "number",
                                                        "example": 10.0
                                                    },
                                                    "shippingCost": {
                                                        "type": "number",
                                                        "example": 10.0
                                                    },
                                                    "invoice": {
                                                        "$ref": "#/components/schemas/Invoice"
                                                    },
                                                    "delivery": {
                                                        "$ref": "#/components/schemas/Delivery"
                                                    },
                                                    "transactionId": {
                                                        "$ref": "#/components/schemas/TransactionId"
                                                    },
                                                    "status": {
                                                        "$ref": "#/components/schemas/TransactionStatus"
                                                    },
                                                    "resultCode": {
                                                        "type": "string",
                                                        "example": "OK"
                                                    },
                                                    "refundStatus": {
                                                        "$ref": "#/components/schemas/RefundStatus"
                                                    },
                                                    "refunds": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {

                                                                "transactionId": {
                                                                    "$ref": "#/components/schemas/TransactionId"
                                                                },
                                                                "refundTotal": {
                                                                    "type": "number",
                                                                    "example": 25.0
                                                                },
                                                                "refundDate": {
                                                                    "type": "string",
                                                                    "description": "The ISO 8601 format of the refund date.",
                                                                    "example": "2004-02-12T15:19:21+00:00"
                                                                },
                                                                "status": {
                                                                    "$ref": "#/components/schemas/TransactionStatus"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "remainingTotal": {
                                                        "type": "number",
                                                        "example": 25.0
                                                    },
                                                    "paymentDate": {
                                                        "type": "string",
                                                        "description": "The ISO 8601 format of the payment date.",
                                                        "example": "2004-02-12T15:19:21+00:00"
                                                    },
                                                    "method": {
                                                        "$ref": "#/components/schemas/Method"
                                                    }
                                                }
                                            }
                                        },
                                        "totalCount": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactioncancel": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Cancel a transaction",
                "description": "Cancel an init-ed transaction.",
                "operationId": "transactioncancel",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The cancel object.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionCancel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "orderRef": {
                                            "$ref": "#/components/schemas/OrderRef"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/TransactionStatus"
                                        },
                                        "transactionId": {
                                            "$ref": "#/components/schemas/TransactionId"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/do": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Do a one-click transaction",
                "description": "Do a one-click transaction with a saved card",
                "operationId": "do",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The transaction object you would init.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OneClickTransaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "transactionId": {
                                            "$ref": "#/components/schemas/TransactionId"
                                        },
                                        "orderRef": {
                                            "$ref": "#/components/schemas/OrderRef"
                                        },
                                        "currency": {
                                            "$ref": "#/components/schemas/Currency"
                                        },
                                        "total": {
                                            "type": "number",
                                            "example": 25.0
                                        },
                                        "redirectUrl": {
                                            "type": "string",
                                            "example": "https://sandbox.simplepay.hu/pay/pay/pspHU/8f4oKRec5R1B696xlxbOcj1jRhhABA2pwSLQDPW60zoGSDWzDU",
                                            "description": "The 3DS challange interface URL."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dorecurring": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Do a recurring transaction",
                "description": "Do a recurring transaction with a saved token",
                "operationId": "dorecurring",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The transaction object you would init.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenTransaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "transactionId": {
                                            "$ref": "#/components/schemas/TransactionId"
                                        },
                                        "orderRef": {
                                            "$ref": "#/components/schemas/OrderRef"
                                        },
                                        "currency": {
                                            "$ref": "#/components/schemas/Currency"
                                        },
                                        "total": {
                                            "type": "number",
                                            "example": 25.0
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cardquery": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Query a saved card",
                "description": "Get the info about a saved bankcard",
                "operationId": "cardquery",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The card object you would query.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CardQuery"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "cardId": {
                                            "$ref": "#/components/schemas/TransactionId"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/CardStatus"
                                        },
                                        "expiry": {
                                            "type": "string",
                                            "description": "The ISO 8601 format of the card expiry date.",
                                            "example": "2004-02-12T15:19:21+00:00"
                                        },
                                        "history": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "orerRef": {
                                                        "$ref": "#/components/schemas/OrderRef"
                                                    },
                                                    "transactionId": {
                                                        "$ref": "#/components/schemas/TransactionId"
                                                    },
                                                    "status": {
                                                        "$ref": "#/components/schemas/TransactionStatus"
                                                    },
                                                    "paymentDate": {
                                                        "type": "string",
                                                        "description": "The ISO 8601 format of the payment date.",
                                                        "example": "2004-02-12T15:19:21+00:00"
                                                    },
                                                    "finishDate": {
                                                        "type": "string",
                                                        "description": "The ISO 8601 format of the finish date.",
                                                        "example": "2004-02-12T15:19:21+00:00"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cardcancel": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Cancel a saved card",
                "description": "Cancel a saved bankcard",
                "operationId": "cardcancel",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The card object you would cancel.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CardCancel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "cardId": {
                                            "$ref": "#/components/schemas/TransactionId"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/CardStatus"
                                        },
                                        "expiry": {
                                            "type": "string",
                                            "description": "The ISO 8601 format of the card expiry date.",
                                            "example": "2004-02-12T15:19:21+00:00"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tokenquery": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Query a saved token",
                "description": "Get the info about a saved token",
                "operationId": "tokenquery",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The token object you would query.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenQuery"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "token": {
                                            "$ref": "#/components/schemas/Token"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/TokenStatus"
                                        },
                                        "expiry": {
                                            "type": "string",
                                            "description": "The ISO 8601 format of the token expiry date.",
                                            "example": "2004-02-12T15:19:21+00:00"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tokencancel": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Cancel a saved token",
                "description": "Cancel a saved token",
                "operationId": "tokencancel",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The token object you would cancel.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenCancel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "token": {
                                            "$ref": "#/components/schemas/Token"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/TokenStatus"
                                        },
                                        "expiry": {
                                            "type": "string",
                                            "description": "The ISO 8601 format of the card expiry date.",
                                            "example": "2004-02-12T15:19:21+00:00"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/starteam": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Start an EAM transaction",
                "description": "Start an EAM transaction using the given parameters",
                "operationId": "starteam",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The EAM transaction object you would like to start.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EamTransaciton"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "orderRef": {
                                            "$ref": "#/components/schemas/OrderRef"
                                        },
                                        "currency": {
                                            "$ref": "#/components/schemas/Currency"
                                        },
                                        "transactionId": {
                                            "$ref": "#/components/schemas/TransactionId"
                                        },
                                        "timeout": {
                                            "type": "string",
                                            "description": "The ISO 8601 format of the timeout date.",
                                            "example": "2004-02-12T15:19:21+00:00"
                                        },
                                        "total": {
                                            "type": "number",
                                            "example": 25.0
                                        },
                                        "eam": {
                                            "type": "string",
                                            "example": "https://sandbox.simplepay.hu/pay/pay/pspHU/8f4oKRec5R1B696xlxbOcj1jRhhABA2pwSLQDPW60zoGSDWzDU",
                                            "description": "The deeplink."
                                        },
                                        "tokens": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Token"
                                            },
                                            "description": "The recurring payment tokens. Provided only for the initial recurring payment."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/startapplepay": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Start an ApplePay session",
                "description": "Start an ApplePay session using the given parameters",
                "operationId": "starteam",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The ApplePay session object you would like to start.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplePaySession"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "transactionId": {
                                            "$ref": "#/components/schemas/TransactionId"
                                        },
                                        "timeout": {
                                            "type": "string",
                                            "description": "The ISO 8601 format of the timeout date.",
                                            "example": "2004-02-12T15:19:21+00:00"
                                        },
                                        "total": {
                                            "type": "number",
                                            "example": 25.0
                                        },
                                        "applePaySession": {
                                            "type": "object",
                                            "properties": {
                                                "epochTimestamp": {
                                                    "type": "integer",
                                                    "example": 1749017418352,
                                                    "description": "The timestamp of the session start."
                                                },
                                                "expiresAt": {
                                                    "type": "integer",
                                                    "example": 1749017418352,
                                                    "description": "The timestamp of the session expiration."
                                                },
                                                "merchantSessionIdentifier": {
                                                    "type": "string",
                                                    "example": "SSHCE5A2091BEC546FD8FACC2A313A2E8AF_2101F68F6980DFE07DEFE987B1CAF2961766C119C8FDCBB33566B1A97F33C9C3"
                                                },
                                                "nonce": {
                                                    "type": "string",
                                                    "example": "836a2281"
                                                },
                                                "merchantIdentifier": {
                                                    "type": "string",
                                                    "example": "D4D7D4CCCD55649F9B1BC1F06432938F62FE991826M4F4CD6829F058F422A26A",
                                                    "description": "The ApplePay merchant ID."
                                                },
                                                "domainName": {
                                                    "type": "string",
                                                    "example": "samehost.example.com",
                                                    "description": "The FQDN."
                                                },
                                                "displayName": {
                                                    "type": "string",
                                                    "example": "My Webshop"
                                                },
                                                "signature": {
                                                    "type": "string",
                                                    "example": "308008…………………0000000"
                                                },
                                                "operationalAnalyticsIdentifier": {
                                                    "type": "string",
                                                    "example": "My Webshop:D4D7D4CCCD55649F4B1BC1F06432938E62FE99182604F4CD6829F058F422A26A"
                                                },
                                                "retries": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "pspId": {
                                                    "type": "string",
                                                    "example": "2A7CFE1FC43C6DE9FC90CA89E46C067DB94C570AF75A7355CD754BF1B683B6C5"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/doapplepay": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Start an ApplePay transaction",
                "description": "Start an ApplePay transaction using the given parameters",
                "operationId": "starteam",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Signature"
                    }
                ],
                "requestBody": {
                    "description": "The ApplePay transaction object you would like to start.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplePayTransaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "headers": {
                            "Signature": {
                                "$ref": "#/components/headers/Signature"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salt": {
                                            "type": "string",
                                            "example": "KAC6ZRUacmQit98nFKOpjXgkwdC0Grzl"
                                        },
                                        "merchant": {
                                            "type": "string",
                                            "example": "PUBLICTESTHUF"
                                        },
                                        "orderRef": {
                                            "$ref": "#/components/schemas/OrderRef"
                                        },
                                        "transactionId": {
                                            "$ref": "#/components/schemas/TransactionId"
                                        },
                                        "currency": {
                                            "$ref": "#/components/schemas/Currency"
                                        },
                                        "total": {
                                            "type": "number",
                                            "example": 25.0
                                        },
                                        "applePayStatus": {
                                            "type": "string",
                                            "example": "STATUS_SUCCESS"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "headers": {
            "Signature": {
                "schema": {
                    "type": "string",
                    "example": "3WGqCnWJArhA224xVdUY1fPh91tpd6va6JvBrPNuHK449TZTgsRn3DBu5UBGbcTn"
                }
            }
        },
        "parameters": {
            "Signature": {
                "name": "Signature",
                "in": "header",
                "description": "The signature.",
                "required": true,
                "schema": {
                    "type": "string",
                    "example": "3WGqCnWJArhA224xVdUY1fPh91tpd6va6JvBrPNuHK449TZTgsRn3DBu5UBGbcTn"
                }
            }
        },
        "schemas": {
            "Transaction": {
                "required": [
                    "currency",
                    "language",
                    "timeout",
                    "methods",
                    "customerEmail"
                ],
                "properties": {
                    "customer": {
                        "type": "string",
                        "example": "Guillaume Tell"
                    },
                    "customerEmail": {
                        "type": "string",
                        "format": "email"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "maySelectInvoice": {
                        "type": "boolean",
                        "default": false
                    },
                    "maySelectEmail": {
                        "type": "boolean",
                        "default": false
                    },
                    "maySelectDelivery": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "HU"
                        }
                    },
                    "twoStep": {
                        "type": "boolean",
                        "default": false
                    },
                    "onlyCardReg": {
                        "type": "boolean",
                        "default": false
                    },
                    "url": {
                        "type": "string",
                        "example": "https://sdk.simplepay.hu/capture.php"
                    },
                    "urls": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "string",
                                "example": "https://sdk.simplepay.hu/success.php"
                            },
                            "fail": {
                                "type": "string",
                                "example": "https://sdk.simplepay.hu/fail.php"
                            },
                            "cancel": {
                                "type": "string",
                                "example": "https://sdk.simplepay.hu/cancel.php"
                            },
                            "timeout": {
                                "type": "string",
                                "example": "https://sdk.simplepay.hu/timeout.php"
                            }
                        }
                    },
                    "language": {
                        "$ref": "#/components/schemas/Language"
                    },
                    "discount": {
                        "type": "number",
                        "default": 0,
                        "exclusiveMinimum": false,
                        "minimum": 0,
                        "example": 10.0
                    },
                    "shippingCost": {
                        "type": "number",
                        "default": 0,
                        "exclusiveMinimum": false,
                        "minimum": 0,
                        "example": 10.0
                    },
                    "total": {
                        "type": "number",
                        "default": 0,
                        "exclusiveMinimum": true,
                        "minimum": 0,
                        "example": 25.0
                    },
                    "delivery": {
                        "$ref": "#/components/schemas/Delivery"
                    },
                    "invoice": {
                        "$ref": "#/components/schemas/Invoice"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Item"
                        }
                    },
                    "methods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Method"
                        },
                        "description": "Possible values: CARD, WIRE or EAM."
                    },
                    "timeout": {
                        "type": "string",
                        "description": "The ISO 8601 format of the timeout date.",
                        "example": "2004-02-12T15:19:21+00:00"
                    }
                },
                "type": "object"
            },
            "AuthorizedTransaction": {
                "type": "object",
                "required": [
                    "originalTotal",
                    "approveTotal",
                    "currency",
                    "orderRef",
                    "transactionId"
                ],
                "properties": {
                    "originalTotal": {
                        "type": "number",
                        "default": 0,
                        "exclusiveMinimum": true,
                        "minimum": 0,
                        "example": 25.0
                    },
                    "approveTotal": {
                        "type": "number",
                        "exclusiveMinimum": false,
                        "minimum": 0,
                        "example": 25.0
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "orderRef": {
                        "$ref": "#/components/schemas/OrderRef"
                    },
                    "transactionId": {
                        "$ref": "#/components/schemas/TransactionId"
                    }
                }
            },
            "Refund": {
                "type": "object",
                "required": [
                    "refundTotal",
                    "currency",
                    "orderRef"
                ],
                "properties": {
                    "refundTotal": {
                        "type": "number",
                        "default": 0,
                        "exclusiveMinimum": true,
                        "minimum": 0,
                        "example": 25.0
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "orderRef": {
                        "$ref": "#/components/schemas/OrderRef"
                    }
                }
            },
            "TransactionCancel": {
                "type": "object",
                "required": [
                    "transactionId",
                    "currency"
                ],
                "properties": {
                    "transactionId": {
                        "$ref": "#/components/schemas/TransactionId"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    }
                }
            },
            "Query": {
                "type": "object",
                "required": [
                    "transactionIds"
                ],
                "properties": {
                    "transactionIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionId"
                        }
                    },
                    "orderRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderRef"
                        }
                    },
                    "detailed": {
                        "type": "boolean",
                        "default": false
                    },
                    "refunds": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "OrderRef": {
                "type": "string",
                "example": "101010515680292482600"
            },
            "TransactionId": {
                "type": "number",
                "example": 99844942
            },
            "Method": {
                "type": "string",
                "enum": [
                    "CARD", "EAM", "WIRE"
                ]
            },
            "TransactionStatus": {
                "type": "string",
                "enum": [
                    "INIT", "TIMEOUT", "CANCELLED", "NOTAUTHORIZED", "INPAYMENT", "INFRAUD", "AUTHORIZED", "REVERSED", "FINISHED"
                ]
            },
            "RefundStatus": {
                "type": "string",
                "enum": [
                    "PARTIAL", "FULL"
                ]
            },
            "Currency": {
                "type": "string",
                "enum": [
                    "EUR", "HUF", "USD"
                ]
            },
            "Language": {
                "type": "string",
                "enum": [
                    "AR", "BG", "CS", "DE", "EN", "ES", "FR", "IT", "HR", "HU", "PL", "RO", "RU", "SK", "TR", "ZH"
                ]
            },
            "Item": {
                "type": "object",
                "required": [
                    "ref",
                    "title",
                    "amount",
                    "price"
                ],
                "properties": {
                    "ref": {
                        "type": "string",
                        "example": "SKU123"
                    },
                    "title": {
                        "type": "string",
                        "example": "Sample Product"
                    },
                    "desc": {
                        "type": "string",
                        "example": "A sample product description.",
                        "nullable": true
                    },
                    "amount": {
                        "type": "integer",
                        "exclusiveMinimum": false,
                        "minimum": 1,
                        "description": "The quantity."
                    },
                    "price": {
                        "type": "number",
                        "exclusiveMinimum": true,
                        "minimum": 0,
                        "example": 25.0
                    },
                    "tax": {
                        "type": "number",
                        "minimum": 0
                    }
                }
            },
            "Invoice": {
                "type": "object",
                "properties": {
                    "city": {
                        "type": "string",
                        "example": "Budapest"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+36701234567"
                    },
                    "state": {
                        "type": "string",
                        "example": "BE"
                    },
                    "zip": {
                        "type": "string",
                        "example": "1000"
                    },
                    "company": {
                        "type": "string",
                        "example": "Cone Development"
                    },
                    "country": {
                        "type": "string",
                        "example": "HU",
                        "description": "The ISO 3166-1 alpha-2 format of the country."
                    },
                    "address": {
                        "type": "string",
                        "example": "Üllői út 1."
                    },
                    "address2": {
                        "type": "string",
                        "example": "II/B",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "example": "Guillaume Tell"
                    }
                }
            },
            "Delivery": {
                "type": "object",
                "properties": {
                    "city": {
                        "type": "string",
                        "example": "Budapest"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+36701234567"
                    },
                    "state": {
                        "type": "string",
                        "example": "BE"
                    },
                    "zip": {
                        "type": "string",
                        "example": "1000"
                    },
                    "company": {
                        "type": "string",
                        "example": "Cone Development"
                    },
                    "country": {
                        "type": "string",
                        "example": "HU",
                        "description": "The ISO 3166-1 alpha-2 format of the country."
                    },
                    "address": {
                        "type": "string",
                        "example": "Üllői út 1."
                    },
                    "address2": {
                        "type": "string",
                        "example": "II/B",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "example": "Guillaume Tell"
                    }
                }
            },
            "Token": {
                "type": "string",
                "example": "SPTBXPQFKRNB2NEKBNXJ42KON6VMVME7M82IK5JX3JX7HISC34KU2LVNC4NVXLLB"
            },
            "OneClickTransaction": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Transaction"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "threeDSReqAuthMethod": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/AuthMethod"
                                    },
                                    {
                                        "example": "02"
                                    }
                                ]
                            },
                            "type": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/TransactionType"
                                    },
                                    {
                                        "example": "CIT",
                                        "description": "For one-click payments this should be always 'CIT'."
                                    }
                                ]
                            },
                            "cardId": {
                                "$ref": "#/components/schemas/TransactionId"
                            },
                            "cardSecret": {
                                "type": "string",
                                "example": "secret-card-password"
                            },
                            "browser": {
                                "type": "object",
                                "properties": {
                                    "ip": {
                                        "type": "string",
                                        "example": "127.0.0.1"
                                    },
                                    "accept": {
                                        "type": "string",
                                        "example": "*/*"
                                    },
                                    "agent": {
                                        "type": "string",
                                        "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:141.0) Gecko/20100101 Firefox/141.0",
                                        "description": "You may use 'navigator.userAgent' in JS."
                                    },
                                    "color": {
                                        "type": "integer",
                                        "example": 30,
                                        "description": "You may use 'screen.colorDepth' in JS."
                                    },
                                    "height": {
                                        "type": "integer",
                                        "example": 900,
                                        "description": "You may use 'screen.height' in JS."
                                    },
                                    "width": {
                                        "type": "integer",
                                        "example": 1440,
                                        "description": "You may use 'screen.width' in JS."
                                    },
                                    "java": {
                                        "type": "boolean",
                                        "description": "You may use 'navigator.javaEnabled()' in JS."
                                    },
                                    "lang": {
                                        "type": "string",
                                        "example": "hu-HU",
                                        "description": "You may use 'navigator.language' in JS."
                                    },
                                    "tz": {
                                        "type": "integer",
                                        "example": -120,
                                        "description": "You may use 'new Date().getTimezoneOffset()' in JS."
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "TokenTransaction": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Transaction"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "threeDSReqAuthMethod": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/AuthMethod"
                                    },
                                    {
                                        "example": "02"
                                    }
                                ]
                            },
                            "type": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/TransactionType"
                                    },
                                    {
                                        "example": "MIT",
                                        "description": "For token payments this should be always 'MIT'."
                                    }
                                ]
                            },
                            "token": {
                                "$ref": "#/components/schemas/Token"
                            }
                        }
                    }
                ]
            },
            "AuthMethod": {
                "type": "string",
                "enum": ["01", "02", "05"]
            },
            "TransactionType": {
                "type": "string",
                "enum": ["CIT", "MIT"]
            },
            "TokenStatus": {
                "type": "string",
                "enum": ["active", "used", "cancelled"]
            },
            "CardStatus": {
                "type": "string",
                "enum": ["ACTIVE", "DISABLED"]
            },
            "CardQuery": {
                "type": "object",
                "required": [
                    "cardId"
                ],
                "properties": {
                    "cardId": {
                        "$ref": "#/components/schemas/TransactionId"
                    },
                    "history": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "CardCancel": {
                "type": "object",
                "required": [
                    "cardId"
                ],
                "properties": {
                    "cardId": {
                        "$ref": "#/components/schemas/TransactionId"
                    }
                }
            },
            "TokenQuery": {
                "type": "object",
                "required": [
                    "token"
                ],
                "properties": {
                    "token": {
                        "$ref": "#/components/schemas/Token"
                    }
                }
            },
            "TokenCancel": {
                "type": "object",
                "required": [
                    "token"
                ],
                "properties": {
                    "token": {
                        "$ref": "#/components/schemas/Token"
                    }
                }
            },
            "EamTransaciton": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Transaction"
                    },
                    {
                        "type": "object",
                        "required": [
                            "eamType"
                        ],
                        "properties": {
                            "eamType": {
                                "type": "integer",
                                "enum": [1, 2, 3, 4, 5, 6, 7],
                                "description": "1: QR, 2: Deeplink, 3: NFC, 4: QR+ Deeplink, 5: QR+NFC, 6: Deeplink +NFC, 7: QR+DL+NFC"
                            }
                        }
                    }
                ]
            },
            "ApplePaySession": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Transaction"
                    },
                    {
                        "type": "object",
                        "required": [
                            "domain"
                        ],
                        "properties": {
                            "domain": {
                                "type": "string",
                                "example": "samehost.example.com",
                                "description": "The FQDN registered for ApplePay."
                            }
                        }
                    }
                ]
            },
            "ApplePayTransaction": {
                "type": "object",
                "required": [
                    "applePayToken"
                ],
                "properties": {
                    "transactionId": {
                        "$ref": "#/components/schemas/TransactionId"
                    },
                    "currecy": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "applePayToken": {
                        "type": "string",
                        "example": "eyJwYX…………………J9fQ==",
                        "description": "The base64 encoded value of the applePaySession object in the startapplepay call response."
                    }
                }
            }
        }
    }
}
